spring:
  application:
    name: desafio-picpay

  feign:
    httpclient:
      enabled: false
      max-connections: ${FEIGN_HTTPCLIENT_MAX_CONNECTIONS:200}
      max-connections-per-route: ${FEIGN_HTTPCLIENT_MAX_CONNECTIONS_PER_ROUTE:50}
      connection-timer-repeat: ${FEIGN_HTTPCLIENT_CONNECTION_TIME_REQUEST:3000}
      ok-http:
        read-timeout: ${FEIGN_HTTPCLIENT_OKHTTP_DEFAULT_READ_TIMEOUT:5s}
    client:
      config:
        default:
          connectTimeout: ${FEIGN_HTTPCLIENT_CONFIG_DEFAULT_CONNECT_TIMEOUT:5000}
          readTimeout: ${FEIGN_HTTPCLIENT_CONFIG_DEFAULT_READ_TIMEOUT:5000}

  profiles:
    active: default

  datasource:
    username: sa
    password: ""
    platform: h2
    url: jdbc:h2:file:./data/payment;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver

  sql:
    init:
      continue-on-error: true
      mode: always

  devtools:
    restart:
      enabled: false

  h2:
    console:
      enabled: true
      path: /h2-console

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"

apps:
  servicos:
    api-autorizacao:
      url: ${ENV_CONSULTA_AUTORIZACAO_URL}


resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 5
        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 50
        waitDurationInOpenState: 10s
        failureRateThreshold: 10
        eventConsumerBufferSize: 50
    instances:
      authorization-circuit:
        baseConfig: default

  retry:
    instances:
      authorization-retry:
        maxAttempts: 2
        waitDuration: 100
        retryExceptions:
          - feign.FeignException